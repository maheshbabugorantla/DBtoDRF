# Generated by drf-auto-generator.
# Defines URL patterns for the '{{ app_name }}' app.

from django.urls import path, include
from rest_framework.routers import DefaultRouter
# Import views from the current app
from . import views

# Create a router instance. DefaultRouter includes a default API root view.
# Use SimpleRouter if you don't want the root view.
router = DefaultRouter()

# Register ViewSets with the router.
# The router automatically generates URL patterns for the standard CRUD actions.
{% for table in tables %}
# URL Prefix: /{{ table.name }}/
# ViewSet: views.{{ table.model_name }}ViewSet
# Base Name: '{{ table.name }}' (used for URL reversing)
router.register(r'{{ table.name }}', views.{{ table.model_name }}ViewSet, basename='{{ table.name }}')
{% endfor %}

# --- Nested Routers (Example if implementing nested style) ---
# from rest_framework_nested import routers
# parent_router = routers.SimpleRouter()
# parent_router.register(r'authors', views.AuthorViewSet, basename='author')
# books_router = routers.NestedSimpleRouter(parent_router, r'authors', lookup='author')
# books_router.register(r'books', views.BookViewSet, basename='author-books')
# urlpatterns = [
#     path('', include(parent_router.urls)),
#     path('', include(books_router.urls)),
# ]

# --- Standard Router URL Patterns ---
# The API URLs are now determined automatically by the router.
urlpatterns = [
    path('', include(router.urls)),
]

# You can add custom non-router paths here if needed:
# urlpatterns += [
#     path('custom-action/', views.custom_view, name='custom-action'),
# ]
